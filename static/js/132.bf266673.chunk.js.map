{"version":3,"file":"static/js/132.bf266673.chunk.js","mappings":"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","sources":["pages/MovieDetail/MovieDetail.styled.js","pages/MovieDetail/MovieDetail.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  /* display: flex; */\n  margin: 20px;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  width: calc(100% / 3);\n  margin-right: 20px;\n`;\n\nexport const Links = styled(Link)`\n  background-color: blueviolet;\n  padding: 10px;\n  color: white;\n  border-radius: 5px;\n  display: inline-flex;\n  margin-right: 10px;\n  min-width: 100px;\n\n  justify-content: center;\n\n  /* flex-direction: column; */\n`;\n\nexport const BtnList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getMovId, IMAGE_URL } from 'services/Api';\nimport {\n  Container,\n  Image,\n  MainInfo,\n  Links,\n  BtnList,\n} from './MovieDetail.styled';\n\nconst MovieDetail = () => {\n  const { movieId } = useParams(null);\n  const location = useLocation(null);\n\n  const [movie, setMovie] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    getMovId(movieId)\n      .then(data => {\n        setMovie(data);\n        setError(null);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error.message);\n        setMovie(null);\n      });\n  }, [movieId]);\n\n  if (!movie || !movieId) {\n    return null;\n  }\n\n  const backLinkHref = location.state?.from ?? '/';\n  // const back = String.fromCharCode(&#8592);\n\n  return (\n    <Container>\n      <MainInfo>\n        {error && <h1>{error}</h1>}\n        <Image\n          src={IMAGE_URL + movie.posterPath}\n          alt=\"movie.title\"\n          height=\"350\"\n        ></Image>\n\n        <ul>\n          <Links to={backLinkHref}>&larr; Go back</Links>\n          <li>\n            <h3>\n              {' '}\n              {movie.title}{' '}\n              {movie.releaseDate\n                ? `(${new Date(movie.releaseDate).getFullYear()})`\n                : '(----)'}\n            </h3>\n            <p>User score: {movie.voteAverage.toFixed(1) * 10}%</p>\n          </li>\n          <li>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </li>\n          <li>\n            <h3>Genres</h3>\n            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n          </li>\n        </ul>\n      </MainInfo>\n\n      <h3>Additional information</h3>\n      <BtnList>\n        <li>\n          <Links to=\"cast\">Cast</Links>\n        </li>\n        <li>\n          <Links to={'reviews'}>Reviews</Links>\n        </li>\n      </BtnList>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetail;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fccf9db5f8a12104e5720aa899b6f5b7';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENDING_PATH = '/trending/movie/day';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios(TRENDING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getReviewsId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["Container","styled","MainInfo","Image","Links","Link","BtnList","movieId","useParams","location","useLocation","useState","movie","setMovie","error","setError","useEffect","getMovId","then","data","catch","console","log","message","backLinkHref","state","from","src","IMAGE_URL","posterPath","alt","height","to","title","releaseDate","Date","getFullYear","voteAverage","toFixed","overview","genres","map","genre","name","join","axios","API_KEY","getTrendMovies","params","api_key","results","poster_path","release_date","vote_average","getCastId","cast","getReviewsId","getMovQuery","query","page"],"sourceRoot":""}