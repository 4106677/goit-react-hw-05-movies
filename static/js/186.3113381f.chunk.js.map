{"version":3,"file":"static/js/186.3113381f.chunk.js","mappings":"8LAyCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAN,GACJC,EAAWD,GAEXG,EAAS,KACV,IACAI,OAAM,SAAAL,GACLC,EAASD,GACTD,EAAW,GACZ,GACJ,GAAE,CAACJ,KAGF,gCACGG,EAAQQ,OAAS,IAChB,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,MAQG,IAAnBV,EAAQQ,SAAiBN,IAAS,yCAGxC,C,uNCrCDW,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACHC,EAAY,kCAGZC,EAAc,mCAAG,uGACLH,EAAAA,EAAAA,GAHH,sBAGwB,CAC1CI,OAAQ,CACNC,QAASJ,KAHe,uBACpBK,EADoB,EACpBA,KADoB,kBAMrBA,EAAKC,SANgB,2CAAH,qDASdC,EAAQ,mCAAG,WAAMxB,GAAN,sGACCgB,EAAAA,EAAAA,GAAM,UAAD,OAAWhB,GAAW,CAChDoB,OAAQ,CACNC,QAASJ,KAHS,uBACdK,EADc,EACdA,KAMNG,EAMEH,EANFG,MACaC,EAKXJ,EALFK,YACcC,EAIZN,EAJFO,aACAC,EAGER,EAHFQ,OACAC,EAEET,EAFFS,SACcC,EACZV,EADFW,aAZoB,kBAcf,CAAER,MAAAA,EAAOC,WAAAA,EAAYE,YAAAA,EAAaE,OAAAA,EAAQC,SAAAA,EAAUC,YAAAA,IAdrC,2CAAH,sDAiBRE,EAAS,mCAAG,WAAMlC,GAAN,0FACAgB,EAAAA,EAAAA,GAAM,UAAD,OAAWhB,EAAX,YAA8B,CACxDoB,OAAQ,CACNC,QAASJ,KAHU,uBACfK,EADe,EACfA,KADe,kBAOhBA,EAAKa,MAPW,2CAAH,sDAUT3B,EAAY,mCAAG,WAAMR,GAAN,0FACHgB,EAAAA,EAAAA,GAAM,UAAD,OAAWhB,EAAX,YAA8B,CACxDoB,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,SAPc,2CAAH,sDAUZa,EAAW,mCAAG,WAAMC,GAAN,yFACFrB,EAAAA,EAAAA,IAAA,gBAA2B,CAChDI,OAAQ,CACNC,QAASJ,EACToB,MAAAA,EACAC,KAAM,KALe,uBACjBhB,EADiB,EACjBA,KADiB,kBASlBA,EAAKC,SATa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["// import Container from 'components/Container';\n// import RequestError from 'components/RequestError';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsId } from 'services/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getReviewsId(movieId)\n      .then(reviews => {\n        setReviews(reviews);\n\n        setError(null);\n      })\n      .catch(error => {\n        setError(error);\n        setReviews([]);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <b>Author: {author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews.length === 0 && !error && <p>Not reviews</p>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fccf9db5f8a12104e5720aa899b6f5b7';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENDING_PATH = '/trending/movie/day';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios(TRENDING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getReviewsId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","getReviewsId","then","catch","length","map","id","author","content","axios","API_KEY","IMAGE_URL","getTrendMovies","params","api_key","data","results","getMovId","title","posterPath","poster_path","releaseDate","release_date","genres","overview","voteAverage","vote_average","getCastId","cast","getMovQuery","query","page"],"sourceRoot":""}