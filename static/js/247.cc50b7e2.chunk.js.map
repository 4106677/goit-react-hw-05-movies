{"version":3,"file":"static/js/247.cc50b7e2.chunk.js","mappings":"8LA+CA,UAzCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUR,GACPS,MAAK,SAAAN,GACJC,EAAUD,GAEVG,EAAS,KACV,IACAI,OAAM,SAAAL,GACLM,QAAQC,IAAIP,EAAMQ,SAClBP,EAASD,GACTD,EAAU,GACX,GACJ,GAAE,CAACJ,KAGF,gCACGG,EAAOW,OAAS,IACf,wBACGX,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACV,2BACE,gBAAKC,IAAKC,EAAAA,GAAYH,EAAcI,IAAKL,EAAMM,MAAO,OACtD,4BACE,uBAAIN,KACJ,0BACE,sCADF,IACqBE,UALhBH,EADC,MAaG,IAAlBb,EAAOW,SAAiBT,IAAS,wCAGvC,C,uNC3CDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACHJ,EAAY,kCAGZK,EAAc,mCAAG,uGACLF,EAAAA,EAAAA,GAHH,sBAGwB,CAC1CG,OAAQ,CACNC,QAASH,KAHe,uBACpBI,EADoB,EACpBA,KADoB,kBAMrBA,EAAKC,SANgB,2CAAH,qDASdC,EAAQ,mCAAG,WAAM/B,GAAN,sGACCwB,EAAAA,EAAAA,GAAM,UAAD,OAAWxB,GAAW,CAChD2B,OAAQ,CACNC,QAASH,KAHS,uBACdI,EADc,EACdA,KAMNG,EAMEH,EANFG,MACaC,EAKXJ,EALFK,YACcC,EAIZN,EAJFO,aACAC,EAGER,EAHFQ,OACAC,EAEET,EAFFS,SACcC,EACZV,EADFW,aAZoB,kBAcf,CAAER,MAAAA,EAAOC,WAAAA,EAAYE,YAAAA,EAAaE,OAAAA,EAAQC,SAAAA,EAAUC,YAAAA,IAdrC,2CAAH,sDAiBR/B,EAAS,mCAAG,WAAMR,GAAN,0FACAwB,EAAAA,EAAAA,GAAM,UAAD,OAAWxB,EAAX,YAA8B,CACxD2B,OAAQ,CACNC,QAASH,KAHU,uBACfI,EADe,EACfA,KADe,kBAOhBA,EAAKY,MAPW,2CAAH,sDAUTC,EAAY,mCAAG,WAAM1C,GAAN,0FACHwB,EAAAA,EAAAA,GAAM,UAAD,OAAWxB,EAAX,YAA8B,CACxD2B,OAAQ,CACNC,QAASH,KAHa,uBAClBI,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,SAPc,2CAAH,sDAUZa,EAAW,mCAAG,WAAMC,GAAN,yFACFpB,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASH,EACTmB,MAAAA,EACAC,KAAM,KALe,uBACjBhB,EADiB,EACjBA,KADiB,kBASlBA,EAAKC,SATa,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["// import Container from 'components/Container';\n// import RequestError from 'components/RequestError';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastId, IMAGE_URL } from 'services/Api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getCastId(movieId)\n      .then(actors => {\n        setActors(actors);\n\n        setError(null);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error);\n        setActors([]);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {actors.length > 0 && (\n        <ul>\n          {actors.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <img src={IMAGE_URL + profile_path} alt={name} width={200} />\n              <div>\n                <b>{name}</b>\n                <p>\n                  <b>Character:</b> {character}\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {actors.length === 0 && !error && <p>Not actors</p>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fccf9db5f8a12104e5720aa899b6f5b7';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENDING_PATH = '/trending/movie/day';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios(TRENDING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getReviewsId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["movieId","useParams","useState","actors","setActors","error","setError","useEffect","getCastId","then","catch","console","log","message","length","map","id","name","profile_path","character","src","IMAGE_URL","alt","width","axios","API_KEY","getTrendMovies","params","api_key","data","results","getMovId","title","posterPath","poster_path","releaseDate","release_date","genres","overview","voteAverage","vote_average","cast","getReviewsId","getMovQuery","query","page"],"sourceRoot":""}