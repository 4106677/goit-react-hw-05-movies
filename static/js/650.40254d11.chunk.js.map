{"version":3,"file":"static/js/650.40254d11.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","pages/MoviesList/MoviesList.jsx","services/Api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.elements.query.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" placeholder=\"Search movie\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'pages/MoviesList/MoviesList';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovQuery } from 'services/Api';\n\nconst Movies = () => {\n  const [searchMov, setSearchMov] = useState([]);\n  const [err, setErr] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      setSearchMov([]);\n      return;\n    }\n\n    getMovQuery(searchQuery.trim())\n      .then(result => {\n        setSearchMov(result);\n        setErr(null);\n      })\n      .catch(error => {\n        setSearchMov([]);\n        setErr(error);\n        // alert(error.message);\n      });\n  }, [searchQuery]);\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {err && <h1>{err}</h1>}\n      {searchMov?.length > 0 && (\n        <MoviesList movies={searchMov} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { IMAGE_URL } from 'services/Api';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul>\n      <h2>header</h2>\n      {movies.map(({ id, title, poster_path, release_date }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <p>\n              {title}, {}\n              {release_date ? new Date(release_date).getFullYear() : '---'}\n            </p>\n            <img\n              src={IMAGE_URL + poster_path}\n              alt={title}\n              loading=\"lazy\"\n              width={250}\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fccf9db5f8a12104e5720aa899b6f5b7';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENDING_PATH = '/trending/movie/day';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios(TRENDING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getReviewsId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["onSubmit","e","preventDefault","target","elements","query","value","type","name","placeholder","useState","searchMov","setSearchMov","err","setErr","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","getMovQuery","trim","then","result","catch","error","length","MoviesList","movies","map","id","title","poster_path","release_date","to","state","from","Date","getFullYear","src","IMAGE_URL","alt","loading","width","axios","API_KEY","getTrendMovies","params","api_key","data","results","getMovId","movieId","posterPath","releaseDate","genres","overview","voteAverage","vote_average","getCastId","cast","getReviewsId","page"],"sourceRoot":""}