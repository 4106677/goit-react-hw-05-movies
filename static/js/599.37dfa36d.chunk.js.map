{"version":3,"file":"static/js/599.37dfa36d.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","pages/MoviesList/MovieList.styled.js","pages/MoviesList/MoviesList.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchBar = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  /* background-color: #3f51b5; */\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Input = styled.input`\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 20px;\n  padding-right: 4px;\n`;\n\nexport const SearchBtn = styled.button`\n  &:hover {\n    opacity: 1;\n  }\n  display: inline-block;\n  width: 200px;\n  height: 48px;\n  border: 0;\n  font-size: 20px;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SearchForm, SearchBar, Input, SearchBtn } from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.elements.query.value);\n  };\n\n  return (\n    <SearchBar>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" placeholder=\"Search movie\" />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </SearchForm>\n    </SearchBar>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'pages/MoviesList/MoviesList';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovQuery } from 'services/Api';\n\nconst Movies = () => {\n  const [searchMov, setSearchMov] = useState([]);\n  const [err, setErr] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      setSearchMov([]);\n      return;\n    }\n\n    getMovQuery(searchQuery.trim())\n      .then(result => {\n        setSearchMov(result);\n        setErr(null);\n      })\n      .catch(error => {\n        setSearchMov([]);\n        setErr(error);\n        // alert(error.message);\n      });\n  }, [searchQuery]);\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {err && <h1>{err}</h1>}\n      {searchMov?.length > 0 && (\n        <MoviesList movies={searchMov} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  max-width: 250px;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 5px;\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Item, Poster } from './MovieList.styled';\n\nimport { IMAGE_URL } from 'services/Api';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <Container>\n      {movies.map(({ id, title, poster_path, release_date }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Poster src={IMAGE_URL + poster_path} alt={title} loading=\"lazy\" />\n            <p>\n              {title}, {}\n              {release_date ? new Date(release_date).getFullYear() : '---'}\n            </p>\n          </Link>\n        </Item>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fccf9db5f8a12104e5720aa899b6f5b7';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENDING_PATH = '/trending/movie/day';\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios(TRENDING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getReviewsId = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page: 1,\n    },\n  });\n\n  return data.results;\n};\n"],"names":["SearchBar","styled","SearchForm","Input","SearchBtn","onSubmit","e","preventDefault","target","elements","query","value","type","name","placeholder","useState","searchMov","setSearchMov","err","setErr","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","getMovQuery","trim","then","result","catch","error","length","MoviesList","movies","Container","Item","Poster","map","id","title","poster_path","release_date","to","state","from","src","IMAGE_URL","alt","loading","Date","getFullYear","axios","API_KEY","getTrendMovies","params","api_key","data","results","getMovId","movieId","posterPath","releaseDate","genres","overview","voteAverage","vote_average","getCastId","cast","getReviewsId","page"],"sourceRoot":""}